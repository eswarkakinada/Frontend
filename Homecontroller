package com.niit.frontend.controller;

import java.io.File;
import java.io.IOException;
import java.nio.file.Path;
import java.nio.file.Paths;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.niit.shoppingcart.dao.CategoryDAO;
import com.niit.shoppingcart.dao.ProductDAO;
import com.niit.shoppingcart.dao.SupplierDAO;
import com.niit.shoppingcart.dao.UserDetailsDAO;
import com.niit.shoppingcart.model.Category;
import com.niit.shoppingcart.model.Product;
import com.niit.shoppingcart.model.Supplier;
import com.niit.shoppingcart.model.UserDetails;

@Controller
public class HomeController {

	@Autowired
	UserDetailsDAO userdetailsDAO;
	@Autowired
	UserDetails userDetails;
	@Autowired
	CategoryDAO categoryDAO;
	@Autowired
	Category category;
	@Autowired
	SupplierDAO supplierDAO;
	@Autowired
	Product product;
	@Autowired
	ProductDAO productDAO;
	@Autowired
	Supplier supplier;

	@ModelAttribute
	public UserDetails returnObject() {

		return new UserDetails();
	}

	@RequestMapping("/")
	public ModelAndView showIndex() {
		ModelAndView mv = new ModelAndView("adminhome");
		mv.addObject("message", "thank for visit");
		return mv;
		// return new ModelAndView("bootstrap");
	}

	@RequestMapping("/signin")
	public ModelAndView Signin() {
		ModelAndView mv = new ModelAndView("signin");
		System.out.println("in sign in page");
		return mv;
	}

	@RequestMapping("/category")
	public ModelAndView category() {
		ModelAndView mv = new ModelAndView("category");
		System.out.println("in category page");
		return mv;
	}

	@RequestMapping(value = "/acat", method = RequestMethod.POST)
	public ModelAndView category(@ModelAttribute("category") Category category, BindingResult result,
			HttpServletRequest request) throws IOException {

		System.out.println("processing to add category");
		System.out.println(category.getId());
		System.out.println(category.getName());
		System.out.println(category.getDescription());
		ModelAndView mv = new ModelAndView("category");
		categoryDAO.save(category);
		return mv;
	}

	@RequestMapping("/supplier")
	public ModelAndView supplier() {
		ModelAndView mv = new ModelAndView("supplier");
		System.out.println("in supplier page");
		return mv;
	}

	@RequestMapping(value = "/asup", method = RequestMethod.POST)
	public ModelAndView category(@ModelAttribute("supplier") Supplier supplier, BindingResult result,
			HttpServletRequest request) throws IOException {

		System.out.println("processing to add supplier");
		System.out.println(supplier.getId());
		System.out.println(supplier.getName());
		System.out.println(supplier.getAddress());
		ModelAndView mv = new ModelAndView("supplier");
		supplierDAO.save(supplier);
		return mv;
	}

	@RequestMapping("/product")
	public ModelAndView product(@ModelAttribute("product") Product product, BindingResult result,
			HttpServletRequest request) {
		ModelAndView mv = new ModelAndView("product");
		System.out.println("in product page");
		return mv;
	}

	
	@ModelAttribute
	public Product returnObject1() {
		return new Product();
	}

	@RequestMapping(value = "/aprod", method = RequestMethod.POST)
	public ModelAndView createProduct(@ModelAttribute("product") Product p1, @RequestParam("image") MultipartFile file,
			Model model, BindingResult result, HttpServletRequest request) throws IOException {

		System.out.println("in add prod");
		ModelAndView mv = new ModelAndView("product");
		@SuppressWarnings("unused")
		String filename;
		@SuppressWarnings("unused")
		byte[] bytes;
		System.out.println("image");
		MultipartFile image = p1.getImage();
		Path path;
		path = Paths.get("F:/DT_Java/Frontend/src/main/webapp/resources/images/" + p1.getId() + ".jpg");
		// String path =
		// request.getSession().getServletContext().getRealPath("/resources/images/"
		// + user.getUser_id() + ".jpg");
		System.out.println("Path = " + path);
		System.out.println("File name = " + p1.getImage().getOriginalFilename());
		if (image != null && !image.isEmpty()) {
			try {
				image.transferTo(new File(path.toString()));
				System.out.println("Image Saved in:" + path.toString());
			} catch (Exception e) {
				e.printStackTrace();
				System.out.println("Image not saved");
			}
		}
		
       productDAO.save(p1);
		return mv;
	}

	@RequestMapping("/deletecategory")
	public ModelAndView deletecat() {
		System.out.println("delete category");
		ModelAndView mv = new ModelAndView("deletecategory");
		return mv;
	}

	@ModelAttribute
	public Category returndelete() {
		return new Category();
	}

	@RequestMapping("dcat")
	public ModelAndView deleteCategory(@ModelAttribute("category") Category category, BindingResult result,
			HttpServletRequest request) throws IOException {
		// category = categoryDAO.get(id);
		ModelAndView mv = new ModelAndView("deletecategory");
		if (category == null) {
			mv.addObject("errorMessage", "could not delete the category");
		} else {
			categoryDAO.delete(category);
		}
		return mv;
	}

	@RequestMapping("/deletesupplier")
	public ModelAndView deletesup() {
		System.out.println("delete supplier");
		ModelAndView mv = new ModelAndView("deletesupplier");
		return mv;
	}

	@ModelAttribute
	public Supplier returndelete1() {
		return new Supplier();
	}
	@RequestMapping("dsup")
	public ModelAndView deleteSupplier(@ModelAttribute("supplier") Supplier supplier, BindingResult result,
			HttpServletRequest request) throws IOException {

		ModelAndView mv = new ModelAndView("deletesupplier");
		if (category == null) {
			mv.addObject("errorMessage", "could not delete the supplier");
		} else {
			supplierDAO.delete(supplier);
		}
		return mv;
	}

	@RequestMapping("/signup")
	public ModelAndView Signup() {

		ModelAndView mv = new ModelAndView("signup");
		return mv;
	}

	@RequestMapping(value = "/register", method = RequestMethod.POST)
	public ModelAndView signup(@ModelAttribute("userdDetails") UserDetails user, BindingResult result,
			HttpServletRequest request) throws IOException {

		System.out.println(user.getPassword());

		ModelAndView mv = new ModelAndView("signin");
		userdetailsDAO.save(user);
		return mv;
	}

	@RequestMapping("/check")
	public ModelAndView AfterSignin(@RequestParam("txtName") String name, @RequestParam("txtpass") String password) {
		System.out.println(name);
		boolean b;
		System.out.println("In Checking Sigin Page");
		ModelAndView mv = new ModelAndView("home");
		// user= userservice.isValidUser(eswar,error);
		if ((name.equals("eswar")) && (password.equals("error"))) {
			b = true;

		} else {
			System.out.println("invalid user plese enter  valid credentials ");
			b = false;
		}

		if (b == true) {
			mv = new ModelAndView("home");
		} else {
			return new ModelAndView("signin");
		}
		return mv;
	}

	@RequestMapping("/home")
	public ModelAndView home() {
		ModelAndView mv = new ModelAndView("home");

		return mv;
	}

}
